name: Deploy static site to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: pages-deploy
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Check if gh-pages branch exists
        id: check-branch
        run: |
          if git ls-remote --heads origin gh-pages | grep -q gh-pages; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout gh-pages branch
        if: steps.check-branch.outputs.exists == 'true'
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: Create gh-pages directory
        if: steps.check-branch.outputs.exists == 'false'
        run: |
          mkdir -p gh-pages
          cd gh-pages
          git init
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout --orphan gh-pages
          echo "# GitHub Pages" > README.md
          touch .nojekyll
          mkdir -p pr
          git add README.md .nojekyll
          git commit -m "Initialize gh-pages branch"
          git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run tests
        run: pnpm test
      
      - name: Build React app
        run: pnpm build
      
      - name: Deploy to gh-pages
        run: |
          # Copy built files to gh-pages root
          cp -r dist/* gh-pages/
          
          # Ensure .nojekyll exists for proper GitHub Pages serving
          touch gh-pages/.nojekyll
          
          # Commit and push
          cd gh-pages
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Ensure we have the latest remote changes
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git fetch origin gh-pages
          git reset --hard origin/gh-pages
          
          # Copy built files again after reset
          cd ..
          cp -r dist/* gh-pages/
          touch gh-pages/.nojekyll
          cd gh-pages
          
          git add .
          
          if git diff --staged --quiet; then
            echo "No changes to deploy"
          else
            git commit -m "Deploy main branch to GitHub Pages"
            git push origin gh-pages
            echo "Deployed to GitHub Pages"
          fi

